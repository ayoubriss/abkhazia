#!/bin/bash -u
# Copyright 2015, 2016 Thomas Schatz, Xuan Nga Cao, Mathieu Bernard
#
# This file is part of abkhazia: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Abkhazia is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with abkahzia. If not, see <http://www.gnu.org/licenses/>.


###### Parameters ######

# data directory in the recipe
name=@@@@

# language model directory in the recipe
lang=@@@@

# acoustic model directory in the recipe
acoustic=@@@@

# number of parallel jobs
njobs=@@@@
njobs_feats=@@@@

# feature parameters
use_pitch=@@@@

# true if the acoustic model is a monophone, false else
is_monophone=@@@@

# acoustic scale for extracting posterior from the final lattice
acoustic_scale=@@@@  # default is 0.1


###### Recipe ######

[ -f cmd.sh ] && source ./cmd.sh \
        || echo "cmd.sh not found. Jobs may not execute properly."

. path.sh || { echo "Cannot source path.sh"; exit 1; }


# Features
mfccdir=mfcc
if [ "$use_pitch" = true ]
then
    make_feats="steps/make_mfcc_pitch.sh"
else
    make_feats="steps/make_mfcc.sh"
fi

echo "computing features with $make_feats"
$make_feats \
    --nj $njobs_feats --cmd "$train_cmd" data/$name \
    exp/make_mfcc/$name $mfccdir;

steps/compute_cmvn_stats.sh \
    data/$name exp/make_mfcc/$name $mfccdir;


## acoustic model test
exp_dir=$acoustic

mono_flag=
[[ $is_monophone = "true" ]] && mono_flag="--mono"

# first instantiate full decoding graph (HCLG)
graph_dir=$exp_dir/graph_lang
mkdir -p $graph_dir
$highmem_cmd \
    $graph_dir/mkgraph.log \
    utils/mkgraph.sh \
    $mono_flag $lang $exp_dir $graph_dir

# decode and compute WER on test set
decode_dir=$exp_dir/decode_lang
mkdir -p $decode_dir
steps/decode.sh \
    --nj $njobs --cmd "$decode_cmd" \
    $graph_dir $data $decode_dir
